name: build
on: [push, pull_request]
jobs:
  skip-duplicates:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'same_content'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md", "**/INSTALL*"]'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
  build:
    needs: skip-duplicates
    if: ${{ needs.skip-duplicates.outputs.should_skip != 'true' }}
    runs-on: ${{ matrix.runs-on }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false # don't abort if one of the build failse
      matrix:
        include:
          - name: Linux
            runs-on: ubuntu-18.04
          - name: macOS
            runs-on: macos-10.15
          - name: macOS-static
            runs-on: macos-10.15
            static: true
          - name: Windows
            runs-on: windows-2019

    env:
      SRC_PATH: ${{ github.workspace }}/src
      BUILD_PATH: ${{ github.workspace }}/builddir
      QT_VERSION: '5.15.2'
      DEVELOPER_DIR: '/Applications/Xcode_11.7.app/Contents/Developer' # specify XCode version on macOS
      QT_SRC_URL: 'https://download.qt.io/official_releases/qt/5.15/5.15.2/single/qt-everywhere-src-5.15.2.tar.xz'
      QT_SRC_PATH: ${{ github.workspace }}/../qt-static-src
      QT_STATIC_BUILD_PATH: ${{ github.workspace }}/../qt-static
      QT_STATIC_CACHE_KEY: '5.15.2_v01'
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies for Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install --yes libjack-dev qt5-default qt5-qmake qttools5-dev
      - name: install dependencies for macOS
        if: runner.os == 'macOS'
        env:
          HOMEBREW_NO_ANALYTICS: 1
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
        run: |
          brew install jack
          if [[ "${{ matrix.static }}" != true ]]; then 
            brew install qt5
            brew link qt5 --force
          fi
      - name: install dependencies for Windows
        if: runner.os == 'Windows'
        run: |
          choco install jack --version=1.9.17
      - name: Cache Qt
        id: cache-qt
        if: runner.os == 'Windows'
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache-${{ env.QT_VERSION }}
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        if: runner.os == 'Windows'
        with:
          version: ${{ env.QT_VERSION }}
          arch: 'win64_mingw81'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: cache static Qt
        id: cache-static-qt
        if: matrix.static == true
        uses: actions/cache@v1
        with:
          path: ${{ env.QT_STATIC_BUILD_PATH }}
          key: ${{ runner.os }}-QtStaticCache-${{ env.QT_STATIC_CACHE_KEY }}
      - name: build static Qt
        if: matrix.static == true && '!steps.cache-static-qt.outputs.cache-hit'
        run: |
          mkdir $QT_STATIC_BUILD_PATH
          echo "Downloading Qt source"
          curl -L $QT_SRC_URL -o qt.tar.xz
          echo "Unpacking Qt source"
          tar -xf qt.tar.xz
          # move qt to a known location
          mv qt-everywhere* $QT_SRC_PATH
          # configure
          "$QT_SRC_PATH/configure" -static -release -ltcg -optimize-size -no-pch -prefix "$QT_STATIC_BUILD_PATH" -skip webengine -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtdatavis3d -skip qtdeclarative -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtlottie -skip qtmultimedia -skip qtpurchasing -skip qtquick3d -skip qtpurchasing -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qttools -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtxmlpatterns -nomake tools -nomake tests -nomake examples -opensource -confirm-license
          # build
          echo "building Qt"
          make -j4
          # install
          echo "installing Qt"
          make install
      - name: build on Linux / macOS
        if: runner.os != 'Windows'
        run: |
          cd $SRC_PATH
          if [[ "${{ matrix.static }}" == true ]]; then 
            export PATH=$QT_STATIC_BUILD_PATH/bin:$PATH
            ./build static
          else
            ./build
          fi
      - name: build on Windows
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mkdir $BUILD_PATH 
          cd $BUILD_PATH
          qmake -spec win32-g++ ../src/jacktrip.pro
          mingw32-make release
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: JackTrip-${{ matrix.name }} # version number could be added here
          path: ${{ env.BUILD_PATH }}
          retention-days: 30 # remove artifacts after 30 days
